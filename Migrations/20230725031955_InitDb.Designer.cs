// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Transaction.Database;

#nullable disable

namespace Finance.Migrations
{
    [DbContext(typeof(TransactionsDbContext))]
    [Migration("20230727031955_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Finance.Models.CategoryEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentCategoryCode")
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ParentCode")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.HasIndex("ParentCategoryCode");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Transaction.Database.Entities.TransactionEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Catcode")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Direction")
                        .HasMaxLength(1)
                        .HasColumnType("integer");

                    b.Property<int>("Kind")
                        .HasMaxLength(3)
                        .HasColumnType("integer");

                    b.Property<int?>("MCC")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Catcode");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("Finance.Models.CategoryEntity", b =>
                {
                    b.HasOne("Finance.Models.CategoryEntity", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryCode");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Transaction.Database.Entities.TransactionEntity", b =>
                {
                    b.HasOne("Finance.Models.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("Catcode");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Finance.Models.CategoryEntity", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
